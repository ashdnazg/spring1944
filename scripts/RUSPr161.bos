#define TAK

piece base,
	  turret_85_1, mantlet_85_1, barrel_85_1, flare_85_1, turret_85_2, mantlet_85_2, barrel_85_2, flare_85_2,
	  turret_45_1, sleeve_45_1, barrel_45_1, flare_45_1, turret_45_2, sleeve_45_2, barrel_45_2, flare_45_2,
	  turret_37, sleeve_37, barrel_37, flare_37,
	  mg_gunner_1, mg_gunner_2, gunner_45_1_1,  gunner_45_1_2, gunner_45_2_1, gunner_45_2_2, gunner_37_1, gunner_37_2,
	  mg_1, mg_turret_1, mg_gun_1, mg_flare_1, mg_2, mg_turret_2, mg_gun_2, mg_flare_2,
	  flag1, flag2, flag3,
	  prop1, prop2,
	  wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<20>

#define AA37_TURRET_TURN		<30>
#define AA37_TURRET_PITCH		<30>

#define GUN45_TURRET_TURN		<25>
#define GUN45_TURRET_PITCH		<30>

#define MG_TURRET_TURN			<30>
#define MG_TURRET_PITCH			<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[0.5]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[0.5]

#define AA37_GUN_RECOIL			[0.4]
#define AA37_GUN_RECOIL_SPEED	[10]
#define AA37_GUN_BACK_SPEED		[0.2]

#define GUN45_GUN_RECOIL		[0.4]
#define GUN45_GUN_RECOIL_SPEED	[10]
#define GUN45_GUN_BACK_SPEED	[0.2]

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

//********************Propeller
#define PROPELLER_SPIN_SPEED	<500>

//*********************Death anim
#define HULL_LIST_SPEED		<5>
#define HULL_LIST_ANGLE		<15>

#define RESTORE_PERIOD		2500

#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_AIM7			256
#define SIG_AIM8			512
#define SIG_DEATH			1024

#define SMOKEPIECE	base

#include "constants.h"
#include "damageSmoke.h"
static-var					CurrentSpeed, bMoving, bAimingAA;

//effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define MEDIUM_Muzzleflash	1024+5
#define MEDIUM_MuzzleDust	1024+6
#define MG_MUZZLEFLASH 1024+7
#define XSMALL_MUZZLEFLASH 1024+8
#define XSMALL_MUZZLEDUST 1024+9

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn turret_85_2 to y-axis <180> now;
	turn turret_45_2 to y-axis <180> now;
	turn turret_37 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

FlagFlap()
{
	while(TRUE)
	{
		turn flag1 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
		turn flag1 to y-axis (FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

HideFlares()
{
	hide flare_85_1;
	hide flare_85_2;
	hide flare_45_1;
	hide flare_45_2;
	hide flare_37;
	hide mg_flare_1;
	hide mg_flare_2;
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	bAimingAA = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
	start-script FlagFlap();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	stop-spin prop1 around z-axis;
	stop-spin prop2 around z-axis;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, oldXZ, newHeading, oldHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	spin prop1 around z-axis speed PROPELLER_SPIN_SPEED;
	spin prop2 around z-axis speed PROPELLER_SPIN_SPEED;
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn turret_85_1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn mantlet_85_1 to x-axis <0> speed MAIN_TURRET_PITCH;
	turn turret_85_2 to y-axis <180> speed MAIN_TURRET_TURN;
	turn mantlet_85_2 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn turret_45_1 to y-axis <0> speed GUN45_TURRET_TURN;
	turn sleeve_45_1 to x-axis <0> speed GUN45_TURRET_PITCH;
	turn turret_45_2 to y-axis <180> speed GUN45_TURRET_TURN;
	turn sleeve_45_2 to x-axis <0> speed GUN45_TURRET_PITCH;

	turn turret_37 to y-axis <180> speed AA37_TURRET_TURN;
	turn sleeve_37 to x-axis <0> speed AA37_TURRET_PITCH;

	turn mg_turret_1 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_gun_1 to x-axis <0> speed MG_TURRET_PITCH;
	turn mg_turret_2 to y-axis <0> speed MG_TURRET_TURN;
	turn mg_gun_2 to x-axis <0> speed MG_TURRET_PITCH;
}

// 85mm turrets
QueryWeapon1(piecenum)
{
	piecenum = flare_85_1;
}

AimFromWeapon1(piecenum)
{
	piecenum = turret_85_1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn turret_85_1 to y-axis heading speed MAIN_TURRET_TURN;
	turn mantlet_85_1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret_85_1 around y-axis;
	wait-for-turn mantlet_85_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUM_Muzzleflash from flare_85_1;
	emit-sfx MEDIUM_MuzzleDust from flare_85_1;
	move barrel_85_1 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_85_1 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

QueryWeapon2(piecenum)
{
	piecenum = flare_85_2;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret_85_2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn turret_85_2 to y-axis heading speed MAIN_TURRET_TURN;
	turn mantlet_85_2 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret_85_2 around y-axis;
	wait-for-turn mantlet_85_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	emit-sfx MEDIUM_Muzzleflash from flare_85_2;
	emit-sfx MEDIUM_MuzzleDust from flare_85_2;
	move barrel_85_2 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_85_2 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

//45mm guns
QueryWeapon3(piecenum)
{
	piecenum = flare_45_1;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret_45_1;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn turret_45_1 to y-axis heading speed GUN45_TURRET_TURN;
	turn sleeve_45_1 to x-axis (0-pitch) speed GUN45_TURRET_PITCH;
	wait-for-turn turret_45_1 around y-axis;
	wait-for-turn sleeve_45_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	emit-sfx XSMALL_MUZZLEFLASH from flare_45_1;
	emit-sfx XSMALL_MUZZLEDUST from flare_45_1;
	move barrel_45_1 to z-axis (0-GUN45_GUN_RECOIL) speed GUN45_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_45_1 to z-axis [0] speed GUN45_GUN_BACK_SPEED;
	// reload anim
	turn gunner_45_1_2 to y-axis <45> speed <45>;
	wait-for-turn gunner_45_1_2 around y-axis;
	turn gunner_45_1_2 to y-axis 0 speed <45>;
}

QueryWeapon4(piecenum)
{
	piecenum = flare_45_2;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret_45_2;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn turret_45_2 to y-axis heading speed GUN45_TURRET_TURN;
	turn sleeve_45_2 to x-axis (0-pitch) speed GUN45_TURRET_PITCH;
	wait-for-turn turret_45_2 around y-axis;
	wait-for-turn sleeve_45_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	emit-sfx XSMALL_MUZZLEFLASH from flare_45_2;
	emit-sfx XSMALL_MUZZLEDUST from flare_45_2;
	move barrel_45_2 to z-axis (0-GUN45_GUN_RECOIL) speed GUN45_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_45_2 to z-axis [0] speed GUN45_GUN_BACK_SPEED;
	// reload anim
	turn gunner_45_2_2 to y-axis <45> speed <45>;
	wait-for-turn gunner_45_2_2 around y-axis;
	turn gunner_45_2_2 to y-axis 0 speed <45>;
}

// 37mm gun
QueryWeapon5(piecenum)
{
	piecenum = flare_37;
}

AimFromWeapon5(piecenum)
{
	piecenum = turret_37;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	bAimingAA = TRUE;
	turn turret_37 to y-axis heading speed AA37_TURRET_TURN;
	turn sleeve_37 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn turret_37 around y-axis;
	wait-for-turn sleeve_37 around x-axis;
	start-script RestoreTurret();
	bAimingAA = FALSE;
	return (TRUE);
}

FireWeapon5()
{
	emit-sfx XSMALL_MUZZLEFLASH from flare_37;
	emit-sfx XSMALL_MUZZLEDUST from flare_37;
	move barrel_37 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_37 to z-axis [0] speed AA37_GUN_BACK_SPEED;
}

QueryWeapon8(piecenum)
{
	piecenum = flare_37;
}

AimFromWeapon8(piecenum)
{
	piecenum = turret_37;
}

AimWeapon8(heading, pitch)
{
	if(bAimingAA)
	{
		return FALSE;
	}
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8|SIG_DEATH;
	turn turret_37 to y-axis heading speed AA37_TURRET_TURN;
	turn sleeve_37 to x-axis (0-pitch) speed AA37_TURRET_PITCH;
	wait-for-turn turret_37 around y-axis;
	wait-for-turn sleeve_37 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon8()
{
	emit-sfx XSMALL_MUZZLEFLASH from flare_37;
	emit-sfx XSMALL_MUZZLEDUST from flare_37;
	move barrel_37 to z-axis (0-AA37_GUN_RECOIL) speed AA37_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_37 to z-axis [0] speed AA37_GUN_BACK_SPEED;
}

// 12.7mm HMG
QueryWeapon6(piecenum)
{
	piecenum = mg_flare_1;
}

AimFromWeapon6(piecenum)
{
	piecenum = mg_turret_1;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn mg_turret_1 to y-axis heading speed MG_TURRET_TURN;
	turn mg_gun_1 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret_1 around y-axis;
	wait-for-turn mg_gun_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{
}

Shot6(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare_1;
}

QueryWeapon7(piecenum)
{
	piecenum = mg_flare_2;
}

AimFromWeapon7(piecenum)
{
	piecenum = mg_turret_2;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn mg_turret_2 to y-axis heading speed MG_TURRET_TURN;
	turn mg_gun_2 to x-axis (0-pitch) speed MG_TURRET_PITCH;
	wait-for-turn mg_turret_2 around y-axis;
	wait-for-turn mg_gun_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon7()
{
}

Shot7(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare_2;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn base to x-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn base around x-axis;
		explode base type		BITMAPONLY;
		return (TRUE);
	}
	corpsetype = 2;
	explode base type		SHATTER;
	explode turret_85_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode turret_85_2 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode turret_45_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode turret_45_2 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode turret_37 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}