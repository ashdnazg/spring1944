#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, load_shoulder, load_arm, wheel1, wheel2, tow_point;
 
static-var restore_delay, skip;

// Signal definitions
#define SIG_AIM				2
#define INFANTRY			412876 //458752 //983040 // this is 65536 * s3o model radius

// Transport script courtesy of Zwzsg's script for Spring SW imptroopc
TransportPickup(unitid)
{
	if( get UNIT_ALLIED(unitid) == 1) { // only pick up allied units
			set BUSY to 1;
			/*turn load_shoulder to y-axis get XZ_ATAN(get PIECE_XZ(base) - get UNIT_XZ(unitid)) now;
			move load_arm to z-axis get XZ_HYPOT(get UNIT_XZ(unitid) - get PIECE_XZ(base)) now;
			turn load_arm to y-axis get XZ_ATAN(get UNIT_XZ(unitid) - get PIECE_XZ(base)) now;
			attach-unit unitid to load_arm;
			move load_arm to z-axis [10.000000] speed [300.000000];
			wait-for-move load_arm along z-axis;*/
			if( get UNIT_HEIGHT (unitid) == INFANTRY) 
			{ 
			  attach-unit unitid to 0 - 1; // hide infantry models
			}
			if( get UNIT_HEIGHT (unitid) != INFANTRY) 
			{ 
			  attach-unit unitid to tow_point; // don't hide other units
			}
			set BUSY to 0;
	}
}

TransportDrop(unitid, position)
{
	set BUSY to 1;
	// turn shoulder to face the drop off point
	turn load_shoulder to y-axis get XZ_ATAN(get PIECE_XZ(base) - position) now;
	attach-unit unitid to load_arm;
	// move arm toward drop off point
	move load_arm to z-axis get XZ_HYPOT(get PIECE_XZ(base) - position) now; // new line
	// sleep for at least a frame (so unit is not dropped by attach-unit)
	sleep 50;
	get PRINT (unitid, position / 65536, position & 65535);
	drop-unit unitid;
	move load_arm to z-axis 0 now;
	set BUSY to 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	set ACTIVATION to 1;
	/*emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;*/
	spin wheel1 around x-axis speed <350.082418>;
	spin wheel2 around x-axis speed <350.082418>;
}

StopMoving()
{
	set ACTIVATION to 0;
	stop-spin wheel1 around x-axis decelerate <100.000000>;
	stop-spin wheel2 around x-axis decelerate <100.000000>;
}

Create()
{
//	spin tow_point around y-axis speed <100>;
	start-script SmokeUnit();
	skip = 0;
//	spin base around y-axis speed <50>;
//	move wheel1 to z-axis [100] now;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 999 )
	{
		corpsetype = 1;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT;
		explode wheel2 type SHATTER | EXPLODE_ON_HIT;
		
		return (0);
	}
	corpsetype = 1;
	explode wheel1 type SHATTER | EXPLODE_ON_HIT;
	explode wheel2 type SHATTER | EXPLODE_ON_HIT;
	explode base type SHATTER;
}
