#define TAK

piece base, boats,
	  main_turret, main_sleeve, main_barrel, main_flare,
	  torp1, torp_flare1, torp2, torp_flare2,
	  turret_20_1, sleeve_20_1, barrel_20_1, flare_20_1,
	  turret_20_2, sleeve_20_2, barrel_20_2, flare_20_2,
	  turret_20_3, sleeve_20_3, barrel_20_3, flare_20_3,
	  turret_20_4, sleeve_20_4, barrel_20_41, flare_20_41, barrel_20_42, flare_20_42,
	  turret_20_5, sleeve_20_5, barrel_20_51, flare_20_51, barrel_20_52, flare_20_52,
	  flag1, flag2, flag3, prop1, prop2,
	  exhaust, wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<25>
#define MAIN_TURRET_PITCH		<25>

#define TORP_TURRET_TURN		<5>

#define turret_20_TURN		<30>
#define turret_20_PITCH		<45>

#define MAIN_MAX_ANGLE			<60>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA20_GUN_RECOIL			[0.3]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[3]

//*********************Death anim
#define base_LIST_SPEED			<10>
#define base_LIST_ANGLE			<-45>

//********************Engine smoke
#define ENGINE_SMOKE_PIECE	exhaust
#define ENGINE_SMOKE_PERIOD	200

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_AIM7			256
#define SIG_AIM8			512

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_AIM7|SIG_AIM8

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

// Propellers
#define PROP_SPEED			<600>

// effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define XSMALL_MUZZLEFLASH 1024+5
#define XSMALL_MUZZLEDUST 1024+6
#define MG_MUZZLEFLASH 1024+7
#define SMALL_MUZZLEFLASH 1024+3
#define SMALL_MUZZLEDUST 1024+4
#define MEDIUMLARGE_MUZZLEFLASH 1024+8
#define MEDIUMLARGE_MUZZLEDUST 1024+9

#define SMOKEPIECE	base

#include "constants.h"

#include "damageSmoke.h"

static-var	CurrentSpeed, bMoving, flare_204, flare_205,
			oldXZ, oldHeading;

FlagFlap()
{
	while(TRUE)
	{
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;

		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE;
			sleep ENGINE_SMOKE_PERIOD;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn turret_20_4 to y-axis <180> now;
	turn turret_20_5 to y-axis <180> now;
	flare_204=TRUE;
	flare_205=TRUE;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;
		emit-sfx SFXTYPE_WAKE1 from wake3;
		emit-sfx SFXTYPE_WAKE1 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	stop-spin prop1 around z-axis;
	stop-spin prop2 around z-axis;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	spin prop1 around z-axis speed PROP_SPEED;
	spin prop2 around z-axis speed PROP_SPEED;
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn main_turret to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis <0> speed MAIN_TURRET_PITCH;

	turn torp1 to y-axis <0> speed TORP_TURRET_TURN;
	turn torp2 to y-axis <0> speed TORP_TURRET_TURN;
	
	turn turret_20_1 to y-axis <0> speed turret_20_TURN;
	turn sleeve_20_1 to x-axis <0> speed turret_20_PITCH;
	turn turret_20_2 to y-axis <0> speed turret_20_TURN;
	turn sleeve_20_2 to x-axis <0> speed turret_20_PITCH;
	turn turret_20_3 to y-axis <0> speed turret_20_TURN;
	turn sleeve_20_3 to x-axis <0> speed turret_20_PITCH;
	turn turret_20_4 to y-axis <180> speed turret_20_TURN;
	turn sleeve_20_4 to x-axis <0> speed turret_20_PITCH;
	turn turret_20_5 to y-axis <180> speed turret_20_TURN;
	turn sleeve_20_5 to x-axis <0> speed turret_20_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	if(pitch>MAIN_MAX_ANGLE)
	{
		// retarget, this one is too high
		set CHANGE_TARGET to 1;
		return FALSE;
	}
	turn main_turret to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret around y-axis;
	wait-for-turn main_sleeve around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUMLARGE_MUZZLEFLASH from main_flare;
	emit-sfx MEDIUMLARGE_MUZZLEDUST from main_flare;

	move main_barrel to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel to z-axis [0] speed MAIN_GUN_BACK_SPEED;
}

QueryWeapon2(piecenum)
{
	piecenum = flare_20_1;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret_20_1;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn turret_20_1 to y-axis heading speed turret_20_TURN;
	turn sleeve_20_1 to x-axis (0-pitch) speed turret_20_PITCH;
	wait-for-turn turret_20_1 around y-axis;
	wait-for-turn sleeve_20_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	show flare_20_1;
	sleep 200;
	hide flare_20_1;
}

Shot2(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from flare_20_1;
	emit-sfx SMALL_MUZZLEDUST from flare_20_1;

	move barrel_20_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon3(piecenum)
{
	piecenum = flare_20_2;
}

AimFromWeapon3(piecenum)
{
	piecenum = turret_20_2;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn turret_20_2 to y-axis heading speed turret_20_TURN;
	turn sleeve_20_2 to x-axis (0-pitch) speed turret_20_PITCH;
	wait-for-turn turret_20_2 around y-axis;
	wait-for-turn sleeve_20_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	show flare_20_2;
	sleep 200;
	hide flare_20_2;
}

Shot3(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from flare_20_2;
	emit-sfx SMALL_MUZZLEDUST from flare_20_2;

	move barrel_20_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon4(piecenum)
{
	piecenum = flare_20_3;
}

AimFromWeapon4(piecenum)
{
	piecenum = turret_20_3;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn turret_20_3 to y-axis heading speed turret_20_TURN;
	turn sleeve_20_3 to x-axis (0-pitch) speed turret_20_PITCH;
	wait-for-turn turret_20_3 around y-axis;
	wait-for-turn sleeve_20_3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	show flare_20_3;
	sleep 200;
	hide flare_20_3;
}

Shot4(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from flare_20_3;
	emit-sfx SMALL_MUZZLEDUST from flare_20_3;

	move barrel_20_3 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel_20_3 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon5(piecenum)
{
	if(flare_204)
	{
		piecenum = flare_20_41;
	} else
	{
		piecenum = flare_20_42;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = turret_20_4;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn turret_20_4 to y-axis heading speed turret_20_TURN;
	turn sleeve_20_4 to x-axis (0-pitch) speed turret_20_PITCH;
	wait-for-turn turret_20_4 around y-axis;
	wait-for-turn sleeve_20_4 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot5(foo)
{
	if(flare_204)
	{
		emit-sfx SMALL_MUZZLEFLASH from flare_20_41;
		emit-sfx SMALL_MUZZLEDUST from flare_20_41;

		move barrel_20_41 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		wait-for-move barrel_20_41 along z-axis;
		move barrel_20_41 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	} else
	{
		emit-sfx SMALL_MUZZLEFLASH from flare_20_42;
		emit-sfx SMALL_MUZZLEDUST from flare_20_42;

		move barrel_20_42 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		wait-for-move barrel_20_42 along z-axis;
		move barrel_20_42 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	}
	flare_204 = !flare_204;
}

QueryWeapon6(piecenum)
{
	if(flare_205)
	{
		piecenum = flare_20_51;
	} else
	{
		piecenum = flare_20_52;
	}
}

AimFromWeapon6(piecenum)
{
	piecenum = turret_20_5;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn turret_20_5 to y-axis heading speed turret_20_TURN;
	turn sleeve_20_5 to x-axis (0-pitch) speed turret_20_PITCH;
	wait-for-turn turret_20_5 around y-axis;
	wait-for-turn sleeve_20_5 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

Shot6(foo)
{
	if(flare_205)
	{
		emit-sfx SMALL_MUZZLEFLASH from flare_20_51;
		emit-sfx SMALL_MUZZLEDUST from flare_20_51;

		move barrel_20_51 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		wait-for-move barrel_20_51 along z-axis;
		move barrel_20_51 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	} else
	{
		emit-sfx SMALL_MUZZLEFLASH from flare_20_52;
		emit-sfx SMALL_MUZZLEDUST from flare_20_52;

		move barrel_20_52 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
		wait-for-move barrel_20_52 along z-axis;
		move barrel_20_52 to z-axis [0] speed AA20_GUN_BACK_SPEED;
	}
	flare_205 = !flare_205;
}


QueryWeapon7(piecenum)
{
	piecenum = torp_flare1;
}

AimFromWeapon7(piecenum)
{
	piecenum = torp1;
}

AimWeapon7(heading, pitch)
{
	signal SIG_AIM7;
	set-signal-mask SIG_AIM7|SIG_DEATH;
	turn torp1 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp1 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon7()
{
	sleep 50;
}

QueryWeapon8(piecenum)
{
	piecenum = torp_flare2;
}

AimFromWeapon8(piecenum)
{
	piecenum = torp2;
}

AimWeapon8(heading, pitch)
{
	signal SIG_AIM8;
	set-signal-mask SIG_AIM8|SIG_DEATH;
	turn torp2 to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp2 around y-axis;
	start-script RestoreTurret();
	return TRUE;
}

FireWeapon8()
{
	sleep 50;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn base to z-axis (base_LIST_ANGLE) speed base_LIST_SPEED;
		wait-for-turn base around z-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode base type		SHATTER;
	return (TRUE);
}