#include "constants.h"

piece base, carriage, sleeve, barrel, flare;
piece crewman1, pelvis1, torso1, head1, luparm1, lloarm1, ruparm1, rloarm1, rthigh1, rleg1, lthigh1, lleg1;
 
static-var bAiming, iFear, iState, PickDeath, lasthit;

#include "inf_sharedDefs.h"
#define RecoverRate 	2000
#define pinnedValue		10

#define FIRE_REVEAL_TIME 5000
// Signal definitions
#define SIG_AIM1	2
#define SIG_DEPLOY	4
#define SIG_FEARRECOVERY	8
#define SIG_FIRE			16

//effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define placeholder_EFFECT05 1024+5
#define placeholder_EFFECT06 1024+6
#define MEDIUMSMALL_Muzzleflash	1024+7
#define MEDIUMSMALL_MuzzleDust	1024+8
#define MuzzleBrakeSmoke	1024+9

// definitions for turret movement - will probably use this later with a more advanced anim that requires redeploy for > arc traverse
#define TURR_TRAVERSE	<12>
#define TURR_ELEVATE	<15>
#define TURR_ARC		<30>

// definitions for weapons behaviour
#define RECOIL		[-3] // distance to recoil the gun
#define RETURN_SPEED	[5] // speed at which the barrel returns

// animation macros
#define CREW_DEPLOY \
move crewman1 to y-axis [-1.0] now;\
turn torso1 to y-axis <40> now;\
turn lloarm1 to x-axis <-45> now;\

#define CREW_FIRING \
turn ruparm1 to x-axis <-90> speed <200>;\
turn ruparm1 to y-axis <20> speed <200>;\
turn torso1 to y-axis <80> speed <200>;\
sleep 100;\
turn torso1 to y-axis <40> speed <100>;\
turn ruparm1 to x-axis <0> speed <100>;\
turn ruparm1 to y-axis <0> speed <100>;\

#define CREW_RELOADING \
turn torso1 to x-axis <30> speed <100>;\
turn ruparm1 to x-axis <-120> speed <200>;\
turn ruparm1 to y-axis <20> speed <200>;\
turn luparm1 to x-axis <-75> speed <200>;\
turn torso1 to y-axis <80> speed <100>;\
wait-for-turn torso1 around y-axis;\
sleep 100;\
turn ruparm1 to x-axis <-60> speed <150>;\
turn luparm1 to x-axis <-25> speed <150>;\
turn torso1 to y-axis <45> speed <50>;\
wait-for-turn torso1 around y-axis;\
sleep 200;\
turn ruparm1 to x-axis <0> speed <100>;\
turn ruparm1 to y-axis <0> speed <100>;\
turn torso1 to x-axis <0> speed <50>;\
turn luparm1 to x-axis <0> speed <100>;\
turn torso1 to y-axis <40> speed <50>;

#define CREW_SUPRESSED \
turn head1 to x-axis <-20> now;\
turn torso1 to y-axis <40> now;\
turn luparm1 to x-axis <-90> now;\
turn ruparm1 to x-axis <-90> now;\
turn lloarm1 to x-axis <-115> now;\
turn rloarm1 to x-axis <-115> now;\
turn luparm1 to z-axis <20> now;\
turn ruparm1 to z-axis <-20> now;\


Create()
{
	hide flare;
	// init vars
	set ACTIVATION to TRUE;
}

TakeCover()
{
set-signal-mask 0;
	if (iState < 6)
	{
	
				iState=6;
				CREW_SUPRESSED

	}
		SET ARMORED to TRUE;

		sleep 100;
		return(0);
}

RestoreAfterCover() //get up out of the dirt. also controls going into pinned mode.
{
	

		if (iFear <=0 && iState>=6)
		{	
			iFear=0;
			CREW_DEPLOY
				iState=1;
				SET ARMORED to FALSE;
				set MAX_SPEED to [0.5];
		
		}
		return (1);
		sleep 100;
	}


FearRecovery() 
{ 
signal SIG_FEARRECOVERY;
set-signal-mask SIG_FEARRECOVERY;
	
     while(iFear > 0) 
        { 
	        sleep RecoverRate; 
			iFear = iFear - RecoverConstant; 
        } 
	start-script RestoreAfterCover();   
	return (1); 
 
return (1); 
}


HitByWeaponId(z,x,id,damage)
{	
	if (id == 999) { // binocs
		return 0;
	}
	if (Id<=300 || Id>700)
	{
	iFear = iFear + 1;
		if (iState < 6 && iFear > pinnedValue) 
		{
		call-script TakeCover();
		//sleep initialDelay;
		}
	start-script FearRecovery();
	return 100;
	}
	
	if (Id==301) iFear = iFear + LittleFear;
	if (Id==401) iFear = iFear + MedFear;
	if (Id==501) iFear = iFear + BigFear;
	if (Id==601) iFear = iFear + MortalFear;
	if (iFear > FearLimit) iFear = FearLimit; // put this line AFTER increasing iFear var		
	if (iState < 6 && iFear > pinnedValue)
	{
	call-script TakeCover();
	//sleep initialDelay;
	}
	start-script FearRecovery();
	return (0); 
}

luaFunction(arg1)
{
 arg1 = iFear;
}


// Weapon 1
QueryWeapon1(piecenum)
{
	piecenum = flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = barrel;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	if (iState>=6) return 0;
	bAiming=1;
		//TODO: anim	
	turn carriage to y-axis heading speed TURR_TRAVERSE;
	turn sleeve to x-axis 0 - pitch speed TURR_ELEVATE;
	wait-for-turn carriage around y-axis;
	wait-for-turn sleeve around x-axis;
	bAiming=0;
	return 1;
}

FireWeapon1()
{
	signal SIG_FIRE;
	set-signal-mask SIG_FIRE;
	emit-sfx MEDIUMSMALL_Muzzleflash from flare;
	emit-sfx MEDIUMSMALL_MuzzleDust from flare;
	move barrel to z-axis RECOIL now;
	//Fire teh weap0n!!!11
	CREW_FIRING;

	sleep 100;
	move barrel to z-axis [0] speed RETURN_SPEED;
	//Now reload...
	set STEALTH to 0;
	CREW_RELOADING
	sleep FIRE_REVEAL_TIME;
	set STEALTH to 1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 || lasthit>1 && lasthit<10)
	{
		corpsetype = 1;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (0);
	}
	if(severity <= 999)
	{
		corpsetype = 1;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	}
	corpsetype = 2;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;	
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode carriage type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
}