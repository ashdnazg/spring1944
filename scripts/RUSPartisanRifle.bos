#define TAK //this is a TAK script

#include "constants.h"

piece  torso, flare, pelvis, rthigh, lthigh, lleg, rleg, rfoot, 
		lfoot, luparm, lloarm, ground, gun, ruparm, rloarm, head;
		
/* --Var defs:
-----Boolean
---
bEngaged - is the unit currently aiming at anything? or was it recently aiming at anything (time controlled by restoreafterdelay)
	Controls: timing of idle animations, the usage of AimRunControl over RunControl
	Set by: Aimweapon, unset by RestoreAfterDelay
---
bNading - is the unit currently in the process of throwing a grenade?
	Controls: locks out weaponready, and X
	Set by: fireweapon of the nade script, unset by same at the end
---
bMoving - is the unit currently moving? 
	Controls: various animations.
	Set by: StartMoving, unset by StopMoving
---
-----Integer
---
iState - what the unit is currently doing //todo: add states for being in a transport, update killed and aimweapon accordingly
	Controls: which aiming anim to use, among others.
	 Set by: everything that changes the state of the unit. *Control, HitbyWeapon, RestoreFromCrawl, ect
	  Values:
		standing idle - 0
		standing at attention - 1
		standing aiming rifle - 2
		standing aiming nade - 3
		-		
		running - 4
		running aiming - 5
		-
		prone 'idle' - 6
		prone aiming - 7
		crawling - 8
		-
		pinned - 9 
---
iFear - how 'afraid' unit currently is. 
	Controls: if unit is crawling/prone or standing.
	Controls: pinned status.
	 Set by: increased by HitbyWeapon on impact of suitable weapon, decreased by FearRecovery
	  Values: 0-16
	  iFear = 0-14 = prone/crawling
	  iFear > 14 = pinned, unable to fire or crawl.
---
	
*/

static-var bEngaged, bMoving, iState, iFear;


//signals to handle control of..everything
#define SIG_RUN					8
#define SIG_AIMRUN				16
#define SIG_CRAWL				32
#define SIG_AIM1				64
#define SIG_AIM2				128 //no inf has more than 2 weapons except commando, something of a special exception
#define SIG_PINNEDCTRL			256
#define SIG_FEARRECOVERY		512
#define SIG_RESTOREFROMCRAWL	1024

//unit definitions
#define RIFLE
#define WEAPON_GRENADE
#define FLAGKILLER
#define GUN_QUERY_PIECENUM	flare
#define IdleDelay	10000
#define RestoreDelay	5000
#define UNIT_SPEED		[0.9]
#define StanceNumber	1

//FX definitions
	//frivolous
#define BLOOD_SM 1024+1
#define BLOOD_LG 1024+2
#define CLIP 1024+3
#define SHELL 1024+4
#define PISS 1024+5
#define CIG 1024+6
#define MUZZLEFLASH 1024+7
//end FX

#include "inf_suppressionVars.h"
#include "inf_poses.h"

#ifdef WEAPON_GRENADE
static-var bNading;
#endif

WeaponReady() //structure is here to allow for multiple poses (either per unit class or even multiples per unit class)
{
var pickStance;
pickStance=rand(1,StanceNumber);
bEngaged = FALSE;
	#ifdef MG
	if (pickStance == 1)
	{
	MG_STANCE1
	}
	#endif
	#ifdef ATROCKET
	if (pickStance == 1)
	{
	ATROCKET_STANCE1
	}
	#endif
	#ifdef SNIPER
	if (pickStance == 1)
	{
	SNIPER_STANCE1
	}
	#endif
	#ifdef SCOUT
	if (pickStance == 1)
	{
	SCOUT_STANCE1
	}
	#endif
#ifdef WEAPON_GRENADE
	if (!bNading)
	{
		#ifdef RIFLE
		show gun;
		if (pickStance == 1)
		{
		RIFLE_STANCE1
		}
		#endif
		#ifdef SMG
		show gun;
		if (pickStance == 1)
		{
		SMG_STANCE1
		}
		#endif
	}
#endif
}


//Idle animations.
#include "inf_idleAnims.h"

//All of the animations concerning movement - running, aimrunning, crawling, standing, going prone.
#include "inf_movementAnims.h"
		

//All the loops that handle the animations and state changes concerning movement.
#include "inf_movementControls.h"

//Fead handling (HitByWeapon, FearRecovery, TakeCover, PinnedControl, Pinned, RestoreAfterCover)
#include "inf_fearHandling.h"

//transport state handling

#include "inf_transportHandling.h"

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

Create()
{
	hide GUN_QUERY_PIECENUM; //thanks to gnome for this inspired idea. no more stupid showing flares...
	bMoving = 0;
	bEngaged = 0;
	#ifdef WEAPON_GRENADE
	bNading = 0;
	#endif
	iState = 1;
	iFear = 0;
	start-script WeaponReady();
	start-script RunControl();
}

RestoreAfterDelay()
{
sleep RestoreDelay;
bEngaged=0;
if (iFear>0) call-script CrawlControl();
if (iFear <=0)
	{
	call-script Stand();
	call-script RunControl();
	}
}

//start weapons
/*
Primary weapon. 
States: crawling/prone, running.
Killed by:
Grenade aiming
PinnedControl
*/

#ifdef RIFLE
#include "inf_weaponRifle.h"
#endif
#ifdef SMG
#include "inf_weaponSMG.h"
#endif
#ifdef MG
#include "inf_weaponMG.h"
#endif
#ifdef ATROCKET
#include "inf_weaponATRocket.h"
#endif
#ifdef SNIPER
#include "inf_weaponSniper.h"
#endif
#ifdef SCOUT
#include "inf_weaponScout.h"
#endif
#ifdef ATRIFLE
#include "inf_weaponATRifle.h"
#endif

//Grenade is always weapon 2
#ifdef WEAPON_GRENADE
#include "inf_weaponGrenade.h"
#endif

#include "inf_Death.h"