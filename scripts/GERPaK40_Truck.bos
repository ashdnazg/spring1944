#include "constants.h"

piece  base, tracks, tent, front_wheels, roller_1, roller_2, roller_3, roller_4, roller_5, roller_6, roller_7, roller_8, carriage, wheel3;
 
static-var gunTowHeading, isTowed, normalSpeed;

// Signal definitions
#define SIG_TOW		64

// definitions for wheels
#define WHEEL_SPIN		<350>


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	spin front_wheels around x-axis speed WHEEL_SPIN;
	spin roller_1 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_2 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_3 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_4 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_5 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_6 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_7 around x-axis speed WHEEL_SPIN * 1.5;
	spin roller_8 around x-axis speed WHEEL_SPIN * 1.5;
	spin wheel3 around x-axis speed WHEEL_SPIN;
}

StopMoving()
{
	stop-spin front_wheels around x-axis decelerate <100.000000>;
	stop-spin roller_1 around x-axis decelerate <100.000000>;
	stop-spin roller_2 around x-axis decelerate <100.000000>;
	stop-spin roller_3 around x-axis decelerate <100.000000>;
	stop-spin roller_4 around x-axis decelerate <100.000000>;
	stop-spin roller_5 around x-axis decelerate <100.000000>;
	stop-spin roller_6 around x-axis decelerate <100.000000>;
	stop-spin roller_7 around x-axis decelerate <100.000000>;
	stop-spin roller_8 around x-axis decelerate <100.000000>;
	stop-spin wheel3 around x-axis decelerate <100.000000>;
}

Create()
{
//	spin tow_point around y-axis speed <100>;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 999 )
	{
		corpsetype = 1;
		explode front_wheels type SHATTER | EXPLODE_ON_HIT;
		explode wheel3 type SHATTER | EXPLODE_ON_HIT;
		
		return (0);
	}
	corpsetype = 1;
	explode front_wheels type SHATTER | EXPLODE_ON_HIT;
	explode carriage type SHATTER | EXPLODE_ON_HIT;
	explode tent type SHATTER;
}
