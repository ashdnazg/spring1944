#include "constants.h"

piece  base, frontwheel, wheel1, wheel2, wheel3, wheel4, wheel5, wheel6, turret, tracks1, tracks2, 
guns, flare1, flare2, flare3, flare4;
 
static-var restore_delay, bMoving, treadnum, aim1;

// Signal definitions
#define SIG_MOVE			1
#define SIG_AIM				2
#define SIG_AIM2			4
#define SIG_AIM3			8
#define SIG_AIM4			16

//effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define placeholder_EFFECT05 1024+5
#define placeholder_EFFECT06 1024+6
#define MG_MUZZLEFLASH 1024+7

//aim rates
#define TURR_TRAVERSE	<500>
#define TURR_ELEVATE	<315>


// tracers
#define MEDIUM_TRACER 	2048+4


treads() 
{ 
   while( TRUE ) 
   { 
        if(bMoving) 
           { 
              if(treadnum == 0) 
              {             
              hide tracks2; 
              show tracks1; 
              } 
            if(treadnum == 1) 
            { 
            hide tracks1; 
            show tracks2; 
			}
            treadnum = !treadnum; 
         } 
      sleep 90; 
   } 
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set ACTIVATION to 1;
	bMoving = TRUE;
	/*emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;*/
	spin frontwheel around x-axis speed <350.082418>;
	spin wheel1 around x-axis speed <350.082418>;
	spin wheel2 around x-axis speed <350.082418>;
	spin wheel3 around x-axis speed <350.082418>;
	spin wheel4 around x-axis speed <350.082418>;
	spin wheel5 around x-axis speed <350.082418>;
	spin wheel6 around x-axis speed <350.082418>;
}

StopMoving()
{
	signal SIG_MOVE;
	set ACTIVATION to 0;
	bMoving = FALSE;
	stop-spin frontwheel around x-axis decelerate <100.000000>;
	stop-spin wheel1 around x-axis decelerate <100.000000>;
	stop-spin wheel2 around x-axis decelerate <100.000000>;
	stop-spin wheel3 around x-axis decelerate <100.000000>;
	stop-spin wheel4 around x-axis decelerate <100.000000>;
	stop-spin wheel5 around x-axis decelerate <100.000000>;
	stop-spin wheel6 around x-axis decelerate <100.000000>;
}

Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	aim1 = FALSE;
	treadnum=0;
	start-script SmokeUnit();
}

// Weapon 1 - .50 cal AA
QueryWeapon1 (piecenum)
	{
	piecenum = flare1;
	}

AimFromWeapon1 (piecenum)
	{
	piecenum = turret;
	}

AimWeapon1(heading, pitch)
	{
	if (aim1) return 0;
	
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	return (1);
	}

FireWeapon1()
	{
	emit-sfx MEDIUM_TRACER from flare1;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare1;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare1;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	return(0);
	}
	
// Weapon 2 - .50 cal AA (slaved)
QueryWeapon2 (piecenum)
	{
	piecenum = flare2;
	}

AimFromWeapon2 (piecenum)
	{
	piecenum = turret;
	}

AimWeapon2(heading, pitch)
	{
	if (aim1) return 0;
	
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;
	
	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	return (1);
	}

FireWeapon2()
	{
	emit-sfx MEDIUM_TRACER from flare2;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare2;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare2;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	return(0);
	}
	
// Weapon 3 - .50 cal AA (slaved)
QueryWeapon3 (piecenum)
	{
	piecenum = flare3;
	}

AimFromWeapon3 (piecenum)
	{
	piecenum = turret;
	}

AimWeapon3(heading, pitch)
	{
	if (aim1) return 0;
	
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;

	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>;  
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	return (1);
	}

FireWeapon3()
	{
	emit-sfx MEDIUM_TRACER from flare3;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare3;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare3;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	return(0);
	}
	
// Weapon 4 - .50 cal AA (slaved)
QueryWeapon4 (piecenum)
	{
	piecenum = flare4;
	}

AimFromWeapon4 (piecenum)
	{
	piecenum = turret;
	}

AimWeapon4(heading, pitch)
	{
	if (aim1) return 0;
	
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;

	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	return (1);
	}

FireWeapon4()
	{
	emit-sfx MEDIUM_TRACER from flare4;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare4;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare4;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	return(0);
	}

// Weapon 5 - .50 cal AA (slaved)
QueryWeapon5(piecenum)
	{
	piecenum = flare1;
	}

AimFromWeapon5(piecenum)
	{
	piecenum = turret;
	}

AimWeapon5(heading, pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	aim1 = TRUE;
	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>;  
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	aim1 = FALSE;
	
	return (1);
	}

FireWeapon5()
	{
	emit-sfx MEDIUM_TRACER from flare1;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare1;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare1;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare1;
	return(0);
	}
	
// Weapon 6 - .50 cal AA (slaved)
QueryWeapon6(piecenum)
	{
	piecenum = flare2;
	}

AimFromWeapon6(piecenum)
	{
	piecenum = turret;
	}

AimWeapon6(heading, pitch)
	{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2;

	aim1 = TRUE;
	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	aim1 = FALSE;
	
	return (1);
	}

FireWeapon6()
	{
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare2;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare2;
	emit-sfx MG_MUZZLEFLASH from flare2;
	sleep 50;
	return(0);
	}
	
// Weapon 7 - .50 cal AA (slaved)
QueryWeapon7(piecenum)
	{
	piecenum = flare3;
	}

AimFromWeapon7(piecenum)
	{
	piecenum = turret;
	}

AimWeapon7(heading, pitch)
	{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3;

	aim1 = TRUE;
	turn turret to y-axis heading speed <500>; 
	turn guns to x-axis 0 - pitch speed <300>; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	aim1 = FALSE;
	
	return (1);
	}

FireWeapon7()
	{
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare3;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare3;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare3;
	sleep 50;
	return(0);
	}
	
// Weapon 8 - .50 cal AA (slaved)
QueryWeapon8(piecenum)
	{
	piecenum = flare4;
	}

AimFromWeapon8(piecenum)
	{
	piecenum = turret;
	}

AimWeapon8(heading, pitch)
	{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4;

	aim1 = TRUE;
	turn turret to y-axis heading speed TURR_TRAVERSE; 
	turn guns to x-axis 0 - pitch speed TURR_ELEVATE; 
	wait-for-turn turret around y-axis; 
	wait-for-turn guns around x-axis;
	aim1 = FALSE;
	
	return (1);
	}

FireWeapon8()
	{
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MEDIUM_TRACER from flare4;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	emit-sfx MG_MUZZLEFLASH from flare4;
	sleep 50;
	return(0);
	}	
SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 999 )
	{
		corpsetype = 1;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT;
		explode wheel2 type SHATTER | EXPLODE_ON_HIT;
		explode guns type SHATTER | EXPLODE_ON_HIT;
		
		return (0);
	}
	corpsetype = 1;
	explode wheel1 type SHATTER | EXPLODE_ON_HIT;
	explode wheel2 type SHATTER | EXPLODE_ON_HIT;
	explode guns type FALL | EXPLODE_ON_HIT;
	explode base type SHATTER;
}
