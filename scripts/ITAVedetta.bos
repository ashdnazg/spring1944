#define TAK

piece base, boats,
	  turret, sleeve, barrel, flare,
	  mg_turret1, mg1, mg_flare1, mg_turret2, mg2, mg_flare2,
	  mg_turret3, mg3, mg_flare3,
	  prop1, prop2,
	  exhaust,
	  flag1, flag2, flag3,
	  wake1, wake2, wake3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<15>

#define mg_turretTURN			<60>
#define mg_turretPITCH			<60>

//*********************Recoil
#define MAIN_GUN_RECOIL			[2.0]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define RESTORE_PERIOD		2500

// ********************Propeller
#define PROP_SPIN_SPEED			<600>

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

#define SIG_MOVE			2
// main gun
#define SIG_AIM1			4
// 13.2mm HMG single guns
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32

#define SIG_DEATH			1024

#define ALL_WEAPON_SIGS		SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4

// effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define XSMALL_MUZZLEFLASH 1024+5
#define XSMALL_MUZZLEDUST 1024+6
#define MG_MUZZLEFLASH 1024+7
#define SMALL_MUZZLEFLASH 1024+3
#define SMALL_MUZZLEDUST 1024+4
#define MEDIUMLARGE_MUZZLEFLASH 1024+8
#define MEDIUMLARGE_MUZZLEDUST 1024+9

#define SMOKEPIECE	base

#include "constants.h"
#include "damagesmoke.h"

static-var	CurrentSpeed, bMoving, oldXZ, oldHeading, bAimAA1, bAimAA2, bAimAA3;

FlagFlap()
{
	while(TRUE)
	{
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;

		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn mg_turret2 to y-axis <180> now;
	turn mg_turret3 to y-axis <180> now;
	bAimAA1 = FALSE;
	bAimAA2 = FALSE;
	bAimAA3 = FALSE;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

HideFlares()
{
	hide flare;
	hide mg_flare1;
	hide mg_flare2;
	hide mg_flare3;
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script FlagFlap();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx SFXTYPE_WAKE1 from wake1;
		emit-sfx SFXTYPE_WAKE1 from wake2;
		emit-sfx SFXTYPE_WAKE1 from wake3;
		emit-sfx SFXTYPE_WHITESMOKE from exhaust;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	stop-spin prop1 around z-axis;
	stop-spin prop2 around z-axis;
	bMoving = FALSE;
	return;
}

StopCatcher()
{
	var newXZ, newHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
	return;
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	spin prop1 around z-axis speed PROP_SPIN_SPEED;
	spin prop2 around z-axis speed PROP_SPIN_SPEED;
	bMoving = TRUE;
	return;
}

RestoreTurret()
{
	set-signal-mask SIG_DEATH|ALL_WEAPON_SIGS;
	sleep RESTORE_PERIOD;

	turn turret to y-axis <0> speed MAIN_TURRET_TURN;
	turn sleeve to x-axis <0> speed MAIN_TURRET_PITCH;

	turn mg_turret1 to y-axis <0> speed mg_turretTURN;
	turn mg1 to x-axis <0> speed mg_turretPITCH;
	turn mg_turret2 to y-axis <180> speed mg_turretTURN;
	turn mg2 to x-axis <0> speed mg_turretPITCH;
	turn mg_turret3 to y-axis <180> speed mg_turretTURN;
	turn mg3 to x-axis <0> speed mg_turretPITCH;
	return;
}
/*
--------------------
Start Weapons
--------------------
*/

//Main gun - 76mm dual purpose gun


QueryWeapon1(piecenum)
{
	piecenum = flare;
	return;
}

AimFromWeapon1(piecenum)
{
	piecenum = turret;
	return;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn turret to y-axis heading speed MAIN_TURRET_TURN;
	turn sleeve to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUMLARGE_MUZZLEFLASH from flare;
	emit-sfx MEDIUMLARGE_MUZZLEDUST from flare;
	move barrel to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	return;
}

/*
-----------------------------------
Start Oerlikon 20mm AA/HE
-----------------------------------
*/

//----------------20mm Oerlikon #1 (AA)
QueryWeapon2(piecenum)
{
	piecenum = mg_flare1;
}

AimFromWeapon2(piecenum)
{
	piecenum = mg_turret1;
}

AimWeapon2(heading, pitch)
{
	bAimAA1 = TRUE;
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn mg_turret1 to y-axis heading speed mg_turretTURN;
	turn mg1 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret1 around y-axis;
	wait-for-turn mg1 around x-axis;
	start-script RestoreTurret();
	bAimAA2 = FALSE;
	return (TRUE);
}

FireWeapon2()
{
	return;
}

Shot2(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare1;
}

//----------------20mm Oerlikon #1 (HE)
QueryWeapon3(piecenum)
{
	piecenum = mg_flare1;
}

AimFromWeapon3(piecenum)
{
	piecenum = mg_turret1;
}

AimWeapon3(heading, pitch)
{
	if(bAimAA1)
	{
		return FALSE;
	}
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn mg_turret1 to y-axis heading speed mg_turretTURN;
	turn mg1 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret1 around y-axis;
	wait-for-turn mg1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	return;
}

Shot3(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare1;
}


//----------------20mm Oerlikon #2 (AA)
QueryWeapon4(piecenum)
{
	piecenum = mg_flare2;
}

AimFromWeapon4(piecenum)
{
	piecenum = mg_turret2;
}

AimWeapon4(heading, pitch)
{
	bAimAA2 = TRUE;
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn mg_turret2 to y-axis heading speed mg_turretTURN;
	turn mg2 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret2 around y-axis;
	wait-for-turn mg2 around x-axis;
	start-script RestoreTurret();
	bAimAA2 = FALSE;
	return (TRUE);
}

FireWeapon4()
{
	return;
}

Shot4(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare2;
}

//----------------20mm Oerlikon #2 (HE)
QueryWeapon5(piecenum)
{
	piecenum = mg_flare2;
}

AimFromWeapon5(piecenum)
{
	piecenum = mg_turret2;
}

AimWeapon5(heading, pitch)
{
	if (bAimAA2)
	{
		return FALSE;
	}
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn mg_turret2 to y-axis heading speed mg_turretTURN;
	turn mg2 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret2 around y-axis;
	wait-for-turn mg2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon5()
{
	return;
}

Shot5(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare2;
}

//--------------20mm Oerlikon #3 (AA)
QueryWeapon6(piecenum)
{
	piecenum = mg_flare3;
}

AimFromWeapon6(piecenum)
{
	piecenum = mg_turret3;
}

AimWeapon6(heading, pitch)
{
	bAimAA3 = TRUE;
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn mg_turret3 to y-axis heading speed mg_turretTURN;
	turn mg3 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret3 around y-axis;
	wait-for-turn mg3 around x-axis;
	start-script RestoreTurret();
	bAimAA3 = FALSE;
	return (TRUE);
}

FireWeapon6()
{
	return;
}

Shot6(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare3;
}

//--------------20mm Oerlikon #3 (HE)
QueryWeapon7(piecenum)
{
	piecenum = mg_flare3;
}

AimFromWeapon7(piecenum)
{
	piecenum = mg_turret3;
}

AimWeapon7(heading, pitch)
{
	if(bAimAA3)
	{
		return FALSE;
	}
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn mg_turret3 to y-axis heading speed mg_turretTURN;
	turn mg3 to x-axis (0-pitch) speed mg_turretPITCH;
	wait-for-turn mg_turret3 around y-axis;
	wait-for-turn mg3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon7()
{
	return;
}

Shot7(foo)
{
	emit-sfx MG_MUZZLEFLASH from mg_flare3;
}

/*
-----------------------------------
End HMG

End Weapons
-----------------------------------
*/

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<200)
	{
		corpsetype = 1;
		//turn base to z-axis base_LIST_ANGLE_Z speed base_LIST_SPEED;
		//wait-for-turn base around z-axis;
		return (TRUE);
	}
	corpsetype = 2;
	explode base type		SHATTER;
	return (TRUE);
}