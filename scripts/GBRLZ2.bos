#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, beam, pad, dp3, dp4, dp5, dp6, dp7, dp8;

static-var RandomSpin, lock, pn;

baseLoop()
{
	while (1)
		{
		emit-sfx 1024 from base;
		sleep 20;
		}
}


Create()
{
	RandomSpin=rand(<0>,<360>);
	turn base to y-axis RandomSpin now;
	lock=0;
	sleep 5000;
	start-script baseloop();
}


FinishedCheck()
{
if (lock>=8)
{
emit-sfx 2048 from base;
sleep 100;
return (0);
}
return (0);
}
//

Go()
{
set INBUILDSTANCE to 1;
lock=lock+1;
}

Stop()
{
set INBUILDSTANCE to 0;
start-script FinishedCheck();
}

SpawnCheck()
{

}

QueryNanoPiece(piecenum)
{
piecenum = beam;
/*if (lock==0) piecenum = dp1;
if (lock==1) piecenum = dp2;
if (lock==2) piecenum = dp3;
if (lock==3) piecenum = dp4;
if (lock==4) piecenum = dp5;
if (lock==5) piecenum = dp6;
if (lock==6) piecenum = dp7;
if (lock==7) piecenum = dp8;*/
}

QueryBuildInfo(piecenum)
{
piecenum = pad;
/*if (lock==0) piecenum = dp1;
if (lock==1) piecenum = dp2;
if (lock==2) piecenum = dp3;
if (lock==3) piecenum = dp4;
if (lock==4) piecenum = dp5;
if (lock==5) piecenum = dp6;
if (lock==6) piecenum = dp7;
if (lock==7) piecenum = dp8;*/
}



AimFromWeapon1(piecenum)
{
	piecenum = base;
}

QueryWeapon1(piecenum)
{
	piecenum = base;
}

AimWeapon1(heading, pitch)
{
	return FALSE;
}

FireWeapon1()
{
return (0);
}

//
