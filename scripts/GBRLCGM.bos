#define TAK

piece base, turret1, sleeve1, barrel1, flare1, turret2, sleeve2, barrel2, flare2,
	  aa20_turret_1, aa20_sleeve_1, aa20_barrel_1, aa20_flare_1, aa20_turret_2, aa20_sleeve_2, aa20_barrel_2, aa20_flare_2,
		flag1, flag2, flag3,
	  wake1, wake2, wake3, wake4;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<17>
#define MAIN_TURRET_PITCH		<17>

#define AA20_TURRET_TURN		<40>
#define AA20_TURRET_PITCH		<45>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[2]

#define AA20_GUN_RECOIL			[0.4]
#define AA20_GUN_RECOIL_SPEED	[10]
#define AA20_GUN_BACK_SPEED		[1]

//*********************Death anim
#define base_LIST_SPEED		<2.5>
#define base_LIST_ANGLE		<15>

#define RESTORE_PERIOD		2500

#define SIG_DEATH			1
#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32

#define SMOKEPIECE	base

//********************Flag
#define FLAG_FLAP_PERIOD	500
#define FLAG_FLAP_SPEED		<30>
#define FLAG_FLAP_ANGLE		<15>

//tracers
#define LARGE_TRACER		2048+6
//effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define XSMALL_MUZZLEFLASH	1024+5
#define XSMALL_MUZZLEDUST	1024+6
#define MEDIUMLARGE_MUZZLEFLASH 1024+8
#define MEDIUMLARGE_MUZZLEDUST 1024+9

#define VISIBLE_PERIOD	8000

#include "constants.h"
#include "damageSmoke.h"
static-var	MaxSpeed, bMoving, bAimAA1, bAimAA2;

FlagFlap()
{
	while(TRUE)
	{
		turn flag2 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;

		turn flag2 to y-axis FLAG_FLAP_ANGLE speed FLAG_FLAP_SPEED;
		turn flag3 to y-axis (0-FLAG_FLAP_ANGLE) speed FLAG_FLAP_SPEED;
		sleep FLAG_FLAP_PERIOD;
	}
}

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			sleep 500;
		}
		sleep 500;
	}
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

HideFlares()
{
	hide aa20_flare_1;
	hide aa20_flare_2;
	hide flare1;
	hide flare2;
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var oldXZ, newXZ, newHeading, oldHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	MaxSpeed = get MAX_SPEED;
	bAimAA1 = FALSE;
	bAimAA2 = FALSE;
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
	start-script StopCatcher();
	start-script FlagFlap();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn turret1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn sleeve1 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn turret2 to y-axis <0> speed MAIN_TURRET_TURN;
	turn sleeve2 to x-axis <0> speed MAIN_TURRET_PITCH;

	turn aa20_turret_1 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis <0> speed AA20_TURRET_PITCH;

	turn aa20_turret_2 to y-axis <0> speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis <0> speed AA20_TURRET_PITCH;
}

QueryWeapon1(piecenum)
{
	piecenum = flare1;
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn turret1 to y-axis heading speed MAIN_TURRET_TURN;
	turn sleeve1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
	emit-sfx MEDIUMLARGE_MUZZLEFLASH from flare1;
	emit-sfx MEDIUMLARGE_MUZZLEDUST from flare1;
	move barrel1 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel1 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	set STEALTH to 0;
	sleep VISIBLE_PERIOD;
	set STEALTH to 1;
}

QueryWeapon2(piecenum)
{
	piecenum = flare2;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn turret2 to y-axis heading speed MAIN_TURRET_TURN;
	turn sleeve2 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
	emit-sfx MEDIUMLARGE_MUZZLEFLASH from flare2;
	emit-sfx MEDIUMLARGE_MUZZLEDUST from flare2;
	move barrel2 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move barrel2 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
	set STEALTH to 0;
	sleep VISIBLE_PERIOD;
	set STEALTH to 1;
}

QueryWeapon3(piecenum)
{
	piecenum = aa20_flare_1;
}

AimFromWeapon3(piecenum)
{
	piecenum = aa20_turret_1;
}

AimWeapon3(heading, pitch)
{
	if (bAimAA1)
	{
		return FALSE;
	}
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn aa20_turret_1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_1 around y-axis;
	wait-for-turn aa20_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	emit-sfx LARGE_TRACER from aa20_flare_1;
}

Shot3(foo)
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_1;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_1;
	move aa20_barrel_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon4(piecenum)
{
	piecenum = aa20_flare_2;
}

AimFromWeapon4(piecenum)
{
	piecenum = aa20_turret_2;
}

AimWeapon4(heading, pitch)
{
	if (bAimAA2)
	{
		return FALSE;
	}
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa20_turret_2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_2 around y-axis;
	wait-for-turn aa20_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	emit-sfx LARGE_TRACER from aa20_flare_2;
}

Shot4(foo)
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_2;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_2;
	move aa20_barrel_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon5(piecenum)
{
	piecenum = aa20_flare_1;
}

AimFromWeapon5(piecenum)
{
	piecenum = aa20_turret_1;
}

AimWeapon5(heading, pitch)
{
	bAimAA1 = TRUE;
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn aa20_turret_1 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_1 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_1 around y-axis;
	wait-for-turn aa20_sleeve_1 around x-axis;
	start-script RestoreTurret();
	bAimAA1 = FALSE;
	return (TRUE);
}

FireWeapon5()
{
	emit-sfx LARGE_TRACER from aa20_flare_1;
}

Shot5(foo)
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_1;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_1;
	move aa20_barrel_1 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_1 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

QueryWeapon6(piecenum)
{
	piecenum = aa20_flare_2;
}

AimFromWeapon6(piecenum)
{
	piecenum = aa20_turret_2;
}

AimWeapon6(heading, pitch)
{
	bAimAA2 = TRUE;
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa20_turret_2 to y-axis heading speed AA20_TURRET_TURN;
	turn aa20_sleeve_2 to x-axis (0-pitch) speed AA20_TURRET_PITCH;
	wait-for-turn aa20_turret_2 around y-axis;
	wait-for-turn aa20_sleeve_2 around x-axis;
	start-script RestoreTurret();
	bAimAA2 = FALSE;
	return (TRUE);
}

FireWeapon6()
{
	emit-sfx LARGE_TRACER from aa20_flare_2;
}

Shot6(foo)
{
	emit-sfx XSMALL_MUZZLEFLASH from aa20_flare_2;
	emit-sfx XSMALL_MUZZLEDUST from aa20_flare_2;
	move aa20_barrel_2 to z-axis (0-AA20_GUN_RECOIL) speed AA20_GUN_RECOIL_SPEED;
	sleep 200;
	move aa20_barrel_2 to z-axis [0] speed AA20_GUN_BACK_SPEED;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn base to z-axis base_LIST_ANGLE speed base_LIST_SPEED;
		wait-for-turn base around z-axis;
		explode base type		BITMAPONLY;
		return (TRUE);
	}
	corpsetype = 2;
	explode base type		SHATTER;
	explode aa20_turret_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa20_turret_2 type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}