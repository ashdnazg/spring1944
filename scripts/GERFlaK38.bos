#include "STANDARD_COMMANDS_GPL.h" // Thank you Argh

piece ground, carriage, stand, wheel1, wheel2, turret, sleeve, barrel, flare, gunner;
piece crewman1, pelvis1, torso1, head1, luparm1, lloarm1, ruparm1, rloarm1, rthigh1, rleg1, lthigh1, lleg1 ;
piece crewman2, pelvis2, torso2, head2, luparm2, lloarm2, ruparm2, rloarm2, rthigh2, rleg2, lthigh2, lleg2;
 
static-var isDeployed, normalSpeed, aim1, reloading;

// Signal definitions
#define SIG_AIM	2
#define SIG_DEPLOY	4

// definitions for wheels
#define WHEEL_SPIN		<100>
#define WHEEL_ACCEL		<30>

// definitions for turret movement - will probably use this later with a more advanced anim that requires redeploy for > arc traverse
#define TURR_TRAVERSE	<200>
#define TURR_ELEVATE	<150>
#define TURR_ARC		<30>

// definitions for weapons behaviour
#define RELOAD		300 // time in milliseconds between shots
#define RECOIL		[-1] // distance to recoil the gun
#define RETURN_SPEED	[50] // speed at which the barrel returns
#define BURST		5

// animation macros
#define HIDE_CREW\
move stand to y-axis [-1] now;\
hide crewman1;\
hide pelvis1;\
hide torso1;\
hide head1;\
hide luparm1;\
hide lloarm1;\
hide ruparm1;\
hide rloarm1;\
hide rthigh1;\
hide rleg1 ;\
hide lthigh1;\
hide lleg1 ;\
hide crewman2;\
hide pelvis2;\
hide torso2;\
hide head2;\
hide luparm2;\
hide lloarm2;\
hide ruparm2;\
hide rloarm2;\
hide rthigh2;\
hide rleg2;\
hide lthigh2;\
hide lleg2;\


#define SHOW_CREW \
move stand to y-axis [0] now;\
show crewman1;\
show pelvis1;\
show torso1;\
show head1;\
show luparm1;\
show lloarm1;\
show ruparm1;\
show rloarm1;\
show rthigh1;\
show rleg1 ;\
show lthigh1;\
show lleg1 ;\
show crewman2;\
show pelvis2;\
show torso2;\
show head2;\
show luparm2;\
show lloarm2;\
show ruparm2;\
show rloarm2;\
show rthigh2;\
show rleg2;\
show lthigh2;\
show lleg2;\

#define CREW_STOP \
turn rleg1  to x-axis 0 speed <200>;\
turn lleg1  to x-axis 0 speed <200>;\
turn rleg2 to x-axis 0 speed <200>;\
turn lleg2 to x-axis 0 speed <200>;\
turn torso1 to y-axis 0 speed <90>;\
turn torso2 to y-axis 0 speed <90>;

//effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define placeholder_EFFECT05 1024+5
#define placeholder_EFFECT06 1024+6
#define MG_MUZZLEFLASH 1024+7
#define XSMALL_MUZZLEFLASH 1024+8
#define XSMALL_MUZZLEDUST 1024+9

//tracers
#define LARGE_TRACER		2048+1

Create()
{
	// init vars
	isDeployed = FALSE;
	aim1 = FALSE;
	reloading = FALSE;
	normalSpeed = get MAX_SPEED;
	set ACTIVATION to TRUE;
}

// thanks to KDR_11k for the deploy/undeploy stuff from KP KDR edit 'pointer'
Deploy() 
{
	set-signal-mask SIG_DEPLOY;
	//TODO: deploy anim
	
	hide wheel1;
	hide wheel2;
	hide carriage;
	HIDE_CREW;
	
	isDeployed = TRUE;
}

UnDeploy() 
{
	set-signal-mask SIG_DEPLOY;
	isDeployed = FALSE;
	// TODO: undeploy anim
	
	SHOW_CREW;
	show wheel1;
	show wheel2;
	show carriage;
	sleep 50;
	wait-for-turn carriage around y-axis;
	
	set MAX_SPEED to normalSpeed;
}

CrewWalk()
{
	//TODO: crew walking anim
	
	var bMoving;
	bMoving = TRUE; // lazy hack!
	
	while (TRUE) {
	if( bMoving )
	{
		turn torso1 to x-axis <30> now;
		turn head1 to x-axis <-30> now;
		turn torso2 to x-axis <30> now;
		turn head2 to x-axis <-30> now;
		
		turn luparm1 to x-axis <-40> now;
		turn lloarm1 to x-axis <-50> now;
		turn luparm2 to x-axis <-45> now;
		turn lloarm2 to x-axis <-45> now;
		
		turn ruparm1 to x-axis <-25> now;
		turn rloarm1 to x-axis <-50> now;
		turn ruparm2 to x-axis <-30> now;
		turn rloarm2 to x-axis <-40> now;
		
		turn ruparm1 to y-axis <15> now;
		turn ruparm2 to y-axis <15> now;
		turn luparm1 to y-axis <-15> now;
		turn luparm2 to y-axis <-15> now;
	
		turn torso1 to y-axis <-6.000000> now;
		turn rthigh1 to x-axis <-1.000000> now;
		turn lthigh1 to x-axis <17.000000> now;
		turn lleg1  to x-axis <80.016484> now;
		turn rleg1  to x-axis <26.005495> now;

		turn rthigh2 to x-axis <-1.000000> now;
		turn lthigh2 to x-axis <17.000000> now;
		turn lleg2 to x-axis <80.016484> now;
		turn rleg2 to x-axis <26.005495> now;

		sleep 60;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <10.000000> now;
		turn lthigh1 to x-axis <4.000000> now;
		turn lleg1 to x-axis <117.027473> now;
		turn rleg1 to x-axis <13.000000> now;

		turn rthigh2 to x-axis <10.000000> now;
		turn lthigh2 to x-axis <4.000000> now;
		turn lleg2 to x-axis <117.027473> now;
		turn rleg2 to x-axis <13.000000> now;

		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <14.000000> now;
		turn lthigh1 to x-axis <-19.000000> now;
		turn rleg1 to x-axis <18.000000> now;

		turn rthigh2 to x-axis <14.000000> now;
		turn lthigh2 to x-axis <-19.000000> now;
		turn rleg2 to x-axis <18.000000> now;

		sleep 60;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <21.000000> now;
		turn lthigh1 to x-axis <-40.005495> now;
		turn lleg1 to x-axis <109.016484> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <21.000000> now;
		turn lthigh2 to x-axis <-40.005495> now;
		turn lleg2 to x-axis <109.016484> now;
		
		sleep 50;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <23.005495> now;
		turn lthigh1 to x-axis <-54.005495> now;
		turn lleg1 to x-axis <80.016484> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <23.005495> now;
		turn lthigh2 to x-axis <-54.005495> now;
		turn lleg2 to x-axis <80.016484> now;
		
		sleep 40;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <30.005495> now;
		turn lthigh1 to x-axis <-44.005495> now;
		turn lleg1 to x-axis <35.005495> now;
		turn rleg1 to x-axis <46.005495> now;
		
		turn rthigh2 to x-axis <30.005495> now;
		turn lthigh2 to x-axis <-44.005495> now;
		turn lleg2 to x-axis <35.005495> now;
		turn rleg2 to x-axis <46.005495> now;

		sleep 30;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <19.000000> now;
		turn lthigh1 to x-axis <-42.005495> now;
		turn lleg1 to x-axis <46.005495> now;
		turn rleg1 to x-axis <84.016484> now;
		
		move pelvis2 to y-axis [0.000000] now;
		//turn torso2 to y-axis <8.000000> now;
		turn rthigh2 to x-axis <19.000000> now;
		turn lthigh2 to x-axis <-42.005495> now;
		turn lleg2 to x-axis <46.005495> now;
		turn rleg2 to x-axis <84.016484> now;

		sleep 40;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <13.000000> now;
		turn lthigh1 to x-axis <-33.005495> now;
		turn rleg1 to x-axis <91.016484> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn pelvis2 to x-axis <6.000000> now;
		turn rthigh2 to x-axis <13.000000> now;
		turn lthigh2 to x-axis <-33.005495> now;
		turn rleg2 to x-axis <91.016484> now;

		sleep 50;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <2.000000> now;
		turn lthigh1 to x-axis <-23.005495> now;
		turn rleg1 to x-axis <100.016484> now;

		turn rthigh2 to x-axis <2.000000> now;
		turn lthigh2 to x-axis <-23.005495> now;
		turn rleg2 to x-axis <100.016484> now;

		sleep 60;
	}
	if( bMoving )
	{

		turn rthigh1 to x-axis <-17.000000> now;
		turn lthigh1 to x-axis <-3.000000> now;
		turn lleg1 to x-axis <31.005495> now;
		turn rleg1 to x-axis <111.016484> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <-17.000000> now;
		turn lthigh2 to x-axis <-3.000000> now;
		turn lleg2 to x-axis <31.005495> now;
		turn rleg2 to x-axis <111.016484> now;

		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <-32.005495> now;
		turn lthigh1 to x-axis <5.000000> now;
		turn lleg1 to x-axis <25.005495> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <-32.005495> now;
		turn lthigh2 to x-axis <5.000000> now;
		turn lleg2 to x-axis <25.005495> now;

		sleep 60;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <-45.005495> now;
		turn lthigh1 to x-axis <13.000000> now;
		turn lleg1 to x-axis <29.005495> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <-45.005495> now;
		turn lthigh2 to x-axis <13.000000> now;
		turn lleg2 to x-axis <29.005495> now;

		sleep 50;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <-50.005495> now;
		turn lthigh1 to x-axis <17.000000> now;
		turn rleg1 to x-axis <63.005495> now;

		turn rthigh2 to x-axis <-50.005495> now;
		turn lthigh2 to x-axis <17.000000> now;
		turn rleg2 to x-axis <63.005495> now;

		sleep 40;
	}
	if( bMoving )
	{
		turn lthigh1 to x-axis <24.005495> now;
		turn rleg1 to x-axis <37.005495> now;

		move pelvis2 to y-axis [0.000000] now;
		turn lthigh2 to x-axis <24.005495> now;
		turn rleg2 to x-axis <37.005495> now;
		
		sleep 30;
	}
	if( bMoving )
	{
		turn rthigh1 to x-axis <-41.005495> now;
		turn lthigh1 to x-axis <20.000000> now;
		turn lleg1 to x-axis <54.005495> now;
		turn rleg1 to x-axis <44.005495> now;
		
		move pelvis2 to y-axis [0.000000] now;
		turn rthigh2 to x-axis <-41.005495> now;
		turn lthigh2 to x-axis <20.000000> now;
		turn lleg2 to x-axis <54.005495> now;
		turn rleg2 to x-axis <44.005495> now;

		sleep 40;
	}
	turn rthigh1 to x-axis <-30.005495> now;
	turn lthigh1 to x-axis <16.000000> now;
	turn lleg1 to x-axis <69.016484> now;
	turn rleg1 to x-axis <41.005495> now;
	
	move pelvis2 to y-axis [0.000000] now;
	turn rthigh2 to x-axis <-30.005495> now;
	turn lthigh2 to x-axis <16.000000> now;
	turn lleg2 to x-axis <69.016484> now;
	turn rleg2 to x-axis <41.005495> now;

	sleep 50;
	}
}

setSFXoccupy(terrain)
{	
	if(!terrain)// Transported
	{
		//TODO: change to being transported anim
		
		call-script UnDeploy();
		HIDE_CREW;
	}	
	if(terrain)
	{
		SHOW_CREW;
	}
}

StartMoving()
{
	signal SIG_DEPLOY;
	set-signal-mask SIG_DEPLOY;
	sleep 200;
	call-script UnDeploy();
 	spin wheel1 around x-axis speed WHEEL_SPIN accelerate WHEEL_ACCEL;
 	spin wheel2 around x-axis speed WHEEL_SPIN accelerate WHEEL_ACCEL;
 	call-script CrewWalk();
}

StopMoving()
{
	signal SIG_DEPLOY;
	set-signal-mask SIG_DEPLOY;
 	stop-spin wheel1 around x-axis;
 	stop-spin wheel2 around x-axis;
	CREW_STOP;
	sleep 200;
	start-script Deploy();
}

Reload()
{
	reloading = TRUE;
	sleep RELOAD;
	reloading = FALSE;
}

// Weapon 1
QueryWeapon1(piecenum)
{
	piecenum = flare;
}

AimFromWeapon1(piecenum)
{
	piecenum = barrel;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if (isDeployed) 
	{
		//TODO: anim
		aim1 = TRUE;
		turn turret to y-axis heading speed TURR_TRAVERSE;
		wait-for-turn turret around y-axis;
		turn sleeve to x-axis <0.000000> - pitch speed TURR_ELEVATE;
		wait-for-turn sleeve around x-axis;
		aim1 = FALSE;
		
		return 1;
	}
	return 0;
}

FireWeapon1()
{
	// barrel recoil
	emit-sfx LARGE_TRACER from flare;
	var i;
	for (i=0; i < BURST; ++i) 
	{
		emit-sfx XSMALL_MUZZLEFLASH from flare;
		emit-sfx XSMALL_MUZZLEDUST from flare;
		move barrel to z-axis RECOIL now;
		sleep 50;
		move barrel to z-axis 0 speed RETURN_SPEED;
		sleep 50;
	}
	sleep 200;
	emit-sfx LARGE_TRACER from flare;
	start-script Reload(); // start reload timer after firing
}

// Weapon 2
QueryWeapon2(piecenum)
{
	piecenum = flare;
}

AimFromWeapon2(piecenum)
{
	piecenum = barrel;
}

AimWeapon2(heading, pitch)
{
	if (aim1) return 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if (isDeployed) 
	{
		//TODO: anim
		turn turret to y-axis heading speed TURR_TRAVERSE;
		wait-for-turn turret around y-axis;
		turn sleeve to x-axis <0.000000> - pitch speed TURR_ELEVATE;
		wait-for-turn sleeve around x-axis;
		
		return 1;
	}
	return 0;
}

FireWeapon2()
{
	// TODO: Add to SFX
	// Do SFX

	// barrel recoil
	var i;
	for (i=0; i < 4;++i)
	{
		move barrel to z-axis RECOIL now;
		show flare;
		sleep 100;
		move barrel to z-axis 0 speed RETURN_SPEED;
		hide flare;
		sleep 100;
	}
	start-script Reload(); // start reload timer after firing
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (0);
	}
	if(severity <= 999)
	{
		corpsetype = 1;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode gunner type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	}
	corpsetype = 2;
	explode turret type EXPLODE_ON_HIT | FIRE | FALL;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;		
	explode gunner type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode head1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode carriage type FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
}