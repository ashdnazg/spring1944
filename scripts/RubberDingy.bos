#include "constants.h"

piece  base, motor, propeller, bow, port1, port2, port3, port4, starboard1, starboard2, starboard3, starboard4;
piece load_shoulder, load_arm;
 
static-var transportcount;

// Signal definitions
#define SIG_MOVE			2

TransportPickup(unitid)
{
	if( get UNIT_ALLIED(unitid) == 1) { // only pick up allied units
		set BUSY to 1;
		attach-unit unitid to 0 - 1; // hide infantry models
		/*transportcount=transportcount+1;
		if (transportcount==1) attach-unit unitid to bow; 
		if (transportcount==2) attach-unit unitid to port1;
		if (transportcount==3) attach-unit unitid to starboard1;
		if (transportcount==4) attach-unit unitid to port2;
		if (transportcount==5) attach-unit unitid to starboard2;
		if (transportcount==6) attach-unit unitid to port3;
		if (transportcount==7) attach-unit unitid to starboard3;
		if (transportcount==8) attach-unit unitid to port4;
		if (transportcount==9) 
		{
			attach-unit unitid to starboard4;
			transportcount=0;
		}*/
		set BUSY to 0;
	}
}

TransportDrop(unitid, position)
{
	set BUSY to 1;
	// turn shoulder to face the drop off point
	turn load_shoulder to y-axis get XZ_ATAN(get PIECE_XZ(base) - position) now;
	attach-unit unitid to load_arm;
	// move arm toward drop off point
	move load_arm to z-axis get XZ_HYPOT(get PIECE_XZ(base) - position) now; // new line
	// sleep for at least a frame (so unit is not dropped by attach-unit)
	sleep 50;
	//get PRINT (unitid, position / 65536, position & 65535);
	drop-unit unitid;
	move load_arm to z-axis 0 now;
	set BUSY to 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	
	/*emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;
	sleep 50;
	emit-sfx 257 from exhaust;*/
	spin propeller around z-axis speed <1850.082418>;
	while( TRUE )
	{
		emit-sfx 2 from port2;
		emit-sfx 2 from starboard2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	stop-spin propeller around z-axis decelerate <100.000000>;
}

Create()
{
/*	turn bow to x-axis <-20> now;
	turn port1 to x-axis <-20> now;
	turn port2 to x-axis <-20> now;
	turn port3 to x-axis <-20> now;
	turn port4 to x-axis <-20> now;
	
	turn starboard1 to x-axis <-20> now;
	turn starboard2 to x-axis <-20> now;
	turn starboard3 to x-axis <-20> now;
	turn starboard4 to x-axis <-20> now;*/
	
	start-script SmokeUnit();
	transportcount=0;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 999 )
	{
		corpsetype = 1;
		
		return (0);
	}
	corpsetype = 1;
//	explode body type SHATTER;
}
