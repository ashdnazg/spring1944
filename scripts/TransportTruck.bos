#include "constants.h"

piece  base, load_shoulder, load_arm, wheel1, wheel2, tow_point;
static-var bGun;

// Signal definitions
#define SIG_AIM				2
#define INFANTRY			412876 //458752 //983040 // this is 65536 * s3o model radius

TransportPickup(unitid)
{
	set BUSY to 1;
	if( get UNIT_HEIGHT (unitid) == INFANTRY) 
	{ 
	  attach-unit unitid to 0 - 1; // hide infantry models
	}
	if( get UNIT_HEIGHT (unitid) != INFANTRY && !bGun) // only load one gun
	{ 
	  attach-unit unitid to tow_point; // don't hide other units
	  bGun = 1;
	}
	set BUSY to 0;
}

TransportDrop(unitid, position)
{
	var dy;
	set BUSY to 1;
	// just dump guns off where they are
	if( get UNIT_HEIGHT (unitid) != INFANTRY) 
	{ 
		drop-unit unitid;
		bGun = 0;
	}
	else
	{
		// turn shoulder to face the drop off point
		turn load_shoulder to y-axis get XZ_ATAN(get PIECE_XZ(base) - position) now;
		attach-unit unitid to load_arm;
		// move arm toward drop off point
		move load_arm to z-axis get XZ_HYPOT(get PIECE_XZ(base) - position) now; // new line
		// sleep for at least a frame (so unit is not dropped by attach-unit)
		sleep 50;
		// synchronize dropped unit's y coord with the ground so it does not get crazy impulse
		dy = get GROUND_HEIGHT(position) - get PIECE_Y(load_arm);
		move load_arm to y-axis dy now;
		sleep 50;
		//get PRINT (unitid, position / 65536, position & 65535);
		drop-unit unitid;
		move load_arm to z-axis 0 now;
		move load_arm to y-axis 0 now;
	}
	set BUSY to 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	spin wheel1 around x-axis speed <350.082418>;
	spin wheel2 around x-axis speed <350.082418>;
}

StopMoving()
{
	stop-spin wheel1 around x-axis decelerate <100.000000>;
	stop-spin wheel2 around x-axis decelerate <100.000000>;
}

Create()
{
	bGun = 0;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 999 )
	{
		corpsetype = 1;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT;
		explode wheel2 type SHATTER | EXPLODE_ON_HIT;
		
		return (0);
	}
	corpsetype = 1;
	explode wheel1 type SHATTER | EXPLODE_ON_HIT;
	explode wheel2 type SHATTER | EXPLODE_ON_HIT;
	explode base type SHATTER;
}
